package com.douding.tuoke.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.douding.tuoke.bean.entity.UserLoginEntity;
import com.douding.tuoke.bean.list.LoginBean;
import com.douding.tuoke.bean.list.MessageBean;
import com.douding.tuoke.bean.list.ModeBean;

import com.douding.tuoke.greendao.UserLoginEntityDao;
import com.douding.tuoke.greendao.LoginBeanDao;
import com.douding.tuoke.greendao.MessageBeanDao;
import com.douding.tuoke.greendao.ModeBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userLoginEntityDaoConfig;
    private final DaoConfig loginBeanDaoConfig;
    private final DaoConfig messageBeanDaoConfig;
    private final DaoConfig modeBeanDaoConfig;

    private final UserLoginEntityDao userLoginEntityDao;
    private final LoginBeanDao loginBeanDao;
    private final MessageBeanDao messageBeanDao;
    private final ModeBeanDao modeBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userLoginEntityDaoConfig = daoConfigMap.get(UserLoginEntityDao.class).clone();
        userLoginEntityDaoConfig.initIdentityScope(type);

        loginBeanDaoConfig = daoConfigMap.get(LoginBeanDao.class).clone();
        loginBeanDaoConfig.initIdentityScope(type);

        messageBeanDaoConfig = daoConfigMap.get(MessageBeanDao.class).clone();
        messageBeanDaoConfig.initIdentityScope(type);

        modeBeanDaoConfig = daoConfigMap.get(ModeBeanDao.class).clone();
        modeBeanDaoConfig.initIdentityScope(type);

        userLoginEntityDao = new UserLoginEntityDao(userLoginEntityDaoConfig, this);
        loginBeanDao = new LoginBeanDao(loginBeanDaoConfig, this);
        messageBeanDao = new MessageBeanDao(messageBeanDaoConfig, this);
        modeBeanDao = new ModeBeanDao(modeBeanDaoConfig, this);

        registerDao(UserLoginEntity.class, userLoginEntityDao);
        registerDao(LoginBean.class, loginBeanDao);
        registerDao(MessageBean.class, messageBeanDao);
        registerDao(ModeBean.class, modeBeanDao);
    }
    
    public void clear() {
        userLoginEntityDaoConfig.clearIdentityScope();
        loginBeanDaoConfig.clearIdentityScope();
        messageBeanDaoConfig.clearIdentityScope();
        modeBeanDaoConfig.clearIdentityScope();
    }

    public UserLoginEntityDao getUserLoginEntityDao() {
        return userLoginEntityDao;
    }

    public LoginBeanDao getLoginBeanDao() {
        return loginBeanDao;
    }

    public MessageBeanDao getMessageBeanDao() {
        return messageBeanDao;
    }

    public ModeBeanDao getModeBeanDao() {
        return modeBeanDao;
    }

}
